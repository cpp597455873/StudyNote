引用&
a:引用在声明的时候就必须对其初始化，一旦与某个变量建立引用关系，那么这个引用就会一直跟追这个变量。
b:在函数的传递引用实参的时候，若实参类型不匹配的话，则会生成临时变量。
 I：实参类型正确，但不是左值。
 II：实参类型不正确，但可以强制转换为正确的类型。
	注：左值：可以被引用的变量，变量，数组元素，结构成员，引用。特别注意 const 类型也是左值，只不过是不可以改变的左值而已。
 eg： void cube(double & a); 
	  1. long x = 5L; cube(a);
	  2. cube(7.0);            //编译不会通过。
	  3. int y = 5; cube(a+10);//编译不会通过。
c：最新版本的C++11可以建立对右值的引用  利用 && 符号。
eg： double && a = 7.0;
	 double && y = a+10.0;
d:在函数中可以返回一个数据的引用，他比直接返回值的好处在于：
若直接返回值是局部变量，那么编译器就会把这个局部变量复制到临时区域，然后在拷贝到某个变量里面，这个对于一个结构体或者一个较大的类来说效率没有直接返回引用高。
使用引用需要注意的是不要将一个局部引用的对象返回。如果要返回的话，请使用指针。