安全解决4类需求
1.保密
2.鉴别/认证
3.完整性
4.不可否认性


对称加密：加密解密密钥一样
置换加密：原理用一个letter置换为另一个letter
转置变换：只对原始数据位置进行变换
乘积变换（加密）：对置换和转置变换进行多次变化
DES：数据加密标准,进行19次乘积变换。
AES：advanced数据加密标准,乘积变换。
优缺点：
高效
密钥交换
安全性不如RSA，但是256bit但是能胜任绝大多数安全问题

非对称加密：
RSA:
建立在分解大数的困难度。
公钥/私钥至少1024bit
优缺点：
安全性足够高
没有密钥交换的问题
效率低

密钥交换：
基于RSA的密钥交换
Diffie-Hellman密钥交换

/////////////////////////////////////////////////////////
消息摘要:
又叫HASH，即散列函数，又叫消息摘要，数字指纹，
常见hash算法：MD5（128bit），SHA1（160bit）
特点：
易变性：微小的变化产生巨大的变化。
不可逆：通过结果反推可能输入的困难
应用场景：
1、基于易变性，可保护数据完整性。也可防损坏。
例如：
文件下载时候的MD5
消息传送时尾部传MD
对核心文件、数据库检测hash
检测恶劣环境下的消息的完整性
2、基于不可逆性，可认证对端。
验证手机密码，传输HASH（如）。server接收hash,对比hash。
对于手机的核心字符串对比使用hash，隐藏字符串
HMAC: Hash-based Message Authentioncation Code
为什么要使用它：
1.直接在后面附带摘要的情况（攻击者，将传改后加重算后的hash）
2.直接对密码做hash传输认证（重放攻击：直接发送hash）
HMAC怎么工作：
利用key对消息加密后再次算hash

/////////////////////////////////////////////////////////////////
电子签名：
签什么：
签的内容的完整性保护
谁在签：
签名人的不可否认性

公钥密码术：
D publickey(E privatekey(P)) = P
例如：
X 生成了privatekey 和 publickey
但是将X使用privatekey用来加密，对端使用X的pulickey解密，
如果能够解密就证明内容是X的发送的，因为只有X才有他自己的私钥
HASH+公钥密码术 = 电子签名

怎么做的：
利用hash现算出消息的hash，完成对消息的完整性的鉴别。
对hash进行基于公钥密码术进行签名。
签名后的hash随着消息的头部或者尾部一起发送。


/////////////////////////////////////////////////////////
证书与PKI
数字证书:公钥作为一个字段存储与文件之中的

怎样对数字证书的完整性和真实性进行验证呢？
对数字证书算出数字指纹，再加入到证书中。

证书链：
根证书自签名，子证书（非根证书）使用父证书的私钥签名，
使用父证书的公钥进行验证。

CA可以发证书，End Entity不可以再次颁发证书。
基于证书的验证：wifi，https基于server client的验证

