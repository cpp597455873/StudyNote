解决IllegalStateException: Can not perform this action after onSaveInstanceState
今天使用Fragment的时候，出现了这个错误 IllegalStateException: Can not perform this action after onSaveInstanceState：

 

E/AndroidRuntime(12747): Caused by: java.lang.IllegalStateException: Can not perform this action after onSaveInstanceState  
    at android.support.v4.app.FragmentManagerImpl.checkStateLoss(FragmentManager.java:1314)  
    at android.support.v4.app.FragmentManagerImpl.enqueueAction(FragmentManager.java:1325)  
 

 

是在使用FragmentTransition的 commit方法添加一个Fragment的时候出现的，后来在官网找到了相关的

说明：http://developer.android.com/reference/android/app/FragmentTransaction.html#commitAllowingStateLoss()

 

public abstract int commitAllowingStateLoss ()

Added in API level 11
Like commit() but allows the commit to be executed after an activity's state is saved. This is dangerous because the commit can be lost if the activity needs to later be restored from its state, so this should only be used for cases where it is okay for the UI state to change unexpectedly on the user.

大致意思是说我使用的 commit方法是在Activity的onSaveInstanceState()之后调用的，这样会出错，因为

 

onSaveInstanceState方法是在该Activity即将被销毁前调用，来保存Activity数据的，如果在保存玩状态后

再给它添加Fragment就会出错。解决办法就是把commit（）方法替换成 commitAllowingStateLoss()就行

了，其效果是一样的。