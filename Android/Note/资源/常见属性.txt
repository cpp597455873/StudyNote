相关组件属性说明: 

TextView属性汇总 
android:autoLink设置是否当文本为URL链接/email/电话号码/map时，文本显示为可点击的链接。可选值(none/web/email/phone/map/all) 
android:autoText如果设置，将自动执行输入值的拼写纠正。此处无效果，在显示输入法并输入的时候起作用。 
android:bufferType指定getText()方式取得的文本类别。选项editable 类似于StringBuilder可追加字符，也就是说getText后可调用append方法设置文本内容。spannable 则可在给定的字符区域使用样式，参见这里1、这里2。 
android:capitalize设置英文字母大写类型。此处无效果，需要弹出输入法才能看得到，参见EditView此属性说明。
android:cursorVisible设定光标为显示/隐藏，默认显示。 
android:digits设置允许输入哪些字符。如“1234567890.+-*/% ()” 
android:drawableBottom在text的下方输出一个drawable，如图片。如果指定一个颜色的话会把text的背景设为该颜色，并且同时和background使用时覆盖后者。 
android:drawableLeft在text的左边输出一个drawable，如图片。 
android:drawablePadding设置text与drawable(图片)的间隔，与drawableLeft、 drawableRight、drawableTop、drawableBottom一起使用，可设置为负数，单独使用没有效果。 
android:drawableRight在text的右边输出一个drawable。 
android:drawableTop在text的正上方输出一个drawable。 
android:editable设置是否可编辑。 
android:editorExtras设置文本的额外的输入数据。 
android:ellipsize设置当文字过长时,该控件该如何显示。有如下值设置：”start”―-省略号显示在开头;”end” ――省略号显示在结尾;”middle”―-省略号显示在中间;”marquee” ――以跑马灯的方式显示(动画横向移动) 
android:freezesText设置保存文本的内容以及光标的位置。 
android:gravity设置文本位置，如设置成“center”，文本将居中显示。 
android:hintText为空时显示的文字提示信息，可通过textColorHint设置提示信息的颜色。此属性在 EditView中使用，但是这里也可以用。 
android:imeOptions附加功能，设置右下角IME动作与编辑框相关的动作，如actionDone右下角将显示一个“完成”，而不设置默认是一个回车符号。这个在EditView中再详细说明，此处无用。 
android:imeActionId设置IME动作ID。 
android:imeActionLabel设置IME动作标签。 
android:includeFontPadding设置文本是否包含顶部和底部额外空白，默认为true。 
android:inputMethod为文本指定输入法，需要完全限定名(完整的包名)。例如：com.google.android.inputmethod.pinyin，但是这里报错找不到。 
android:inputType设置文本的类型，用于帮助输入法显示合适的键盘类型。在EditView中再详细说明，这里无效果。 
android:linksClickable设置链接是否点击连接，即使设置了autoLink。 
android:marqueeRepeatLimit在ellipsize指定marquee的情况下，设置重复滚动的次数，当设置为 marquee_forever时表示无限次。 
android:ems设置TextView的宽度为N个字符的宽度。这里测试为一个汉字字符宽度 
android:maxEms设置TextView的宽度为最长为N个字符的宽度。与ems同时使用时覆盖ems选项。 
android:minEms设置TextView的宽度为最短为N个字符的宽度。与ems同时使用时覆盖ems选项。 
android:maxLength限制显示的文本长度，超出部分不显示。 
android:lines设置文本的行数，设置两行就显示两行，即使第二行没有数据。 
android:maxLines设置文本的最大显示行数，与width或者layout_width结合使用，超出部分自动换行，超出行数将不显示。 
android:minLines设置文本的最小行数，与lines类似。 
android:lineSpacingExtra设置行间距。 
android:lineSpacingMultiplier设置行间距的倍数。如”1.2” 
android:numeric如果被设置，该TextView有一个数字输入法。此处无用，设置后唯一效果是TextView有点击效果，此属性在EdtiView将详细说明。 
android:password以小点”.”显示文本 
android:phoneNumber设置为电话号码的输入方式。 
android:privateImeOptions设置输入法选项，此处无用，在EditText将进一步讨论。 
android:scrollHorizontally设置文本超出TextView的宽度的情况下，是否出现横拉条。 
android:selectAllOnFocus如果文本是可选择的，让他获取焦点而不是将光标移动为文本的开始位置或者末尾位置。 TextView中设置后无效果。 
android:shadowColor指定文本阴影的颜色，需要与shadowRadius一起使用。 
android:shadowDx设置阴影横向坐标开始位置。 
android:shadowDy设置阴影纵向坐标开始位置。 
android:shadowRadius设置阴影的半径。设置为0.1就变成字体的颜色了，一般设置为3.0的效果比较好。 
android:singleLine设置单行显示。如果和layout_width一起使用，当文本不能全部显示时，后面用“…”来表示。如android:text="test_ singleLine " 
android:singleLine="true" android:layout_width="20dp"将只显示“t…”。如果不设置singleLine或者设置为false，文本将自动换行 
android:text设置显示文本. 
android:textAppearance设置文字外。如 “?android:attr/textAppearanceLargeInverse”这里引用的是系统自带的一个外观，?表示系统是否有这种外观，否则使用默认的外观。可textAppearanceButton/textAppearanceInverse/textAppearanceLarge/textAppearanceLargeInverse/textAppearanceMedium/textAppearanceMediumInverse/textAppearanceSmall/textAppearanceSmallInverse
android:textColor设置文本颜色 
android:textColorHighlight被选中文字的底色，默认为蓝色 
android:textColorHint设置提示信息文字的颜色，默认为灰色。与hint一起使用。 
android:textColorLink文字链接的颜色. 
android:textScaleX设置文字之间间隔，默认为1.0f。 
android:textSize设置文字大小，推荐度量单位”sp”，如”15sp” 
android:textStyle设置字形[bold(粗体) 0, italic(斜体) 1, bolditalic(又粗又斜) 2] 可以设置一个或多个，用“|”隔开 
android:typeface设置文本字体，必须是以下常量值之一：normal 0, sans 1, serif 2, monospace(等宽字体) 3] 
android:height设置文本区域的高度，支持度量单位：px(像素)/dp/sp/in/mm(毫米) 
android:maxHeight设置文本区域的最大高度 
android:minHeight设置文本区域的最小高度 
android:width设置文本区域的宽度，支持度量单位：px(像素)/dp/sp/in/mm(毫米)，与layout_width 的区别看这里。 
android:maxWidth设置文本区域的最大宽度 
android:minWidth设置文本区域的最小宽度 

---------------------------------------------------------------
Android activity属性汇总 
android:allowTaskReparenting 
是否允许activity更换从属的任务，比如从短信息任务 切换到浏览器任务。 
android:alwaysRetainTaskState 
是否保留状态不变， 比如切换回home, 再从新打开， activity处于最后的状态 
android:clearTaskOnLanunch 
比如 P 是 activity, Q 是被P 触发的 activity, 然后返回Home, 从新启动 P， 是否显示 Q 
android:configChanges 
当配置list发生修改时，是否调用 onConfigurationChanged() 方法 比如 "locale|navigation|orientation". 
android:enabled 
activity 是否可以被实例化, 
android:excludeFromRecents 
是否可被显示在最近打开的activity列表里 
android:exported 
是否允许activity被其它程序调用 
android:finishOnTaskLaunch 
是否关闭已打开的activity当用户重新启动这个任务的时候 
android.icon 
android:label 
android:launchMode 
activity启动方式， "standard" "singleTop" "singleTask" "singleInstance" 
其中前两个为一组， 后两个为一组 
android:multiprocess 
允许多进程 
android:name 
activity的类名， 必须指定 
androidnHistory 
是否需要移除这个activity当用户切换到其他屏幕时。 这个属性是 API level 3 中引入的 
android:permission 
android:process 
一 个activity运行时所在的进程名，所有程序组件运行在应用程序默认的进程中，这个进程名跟应用程序的包名一致。中的元素process属性能够为所有组件设定一个新的默认值。但是任何组件都可以覆盖这个默认值，允许你将你的程序放在多进程中运行。 如果这个属性被分配的名字以:开头，当这个activity运行时, 一个新的专属于这个程序的进程将会被创建。 如果这个进程名以小写字母开头，这个activity将会运行在全局的进程中，被它的许可所提供。 
android:screenOrientation 
activity显示的模式, "unspecified" 默认值 "landscape" 风景画模式，宽度比高度大一些 "portrait" 肖像模式, 高度比宽度大。 "user" 用户的设置 "behind" "sensor" "nosensor" 
android:stateNotNeeded 
是否 activity被销毁和成功重启并不保存状态 
android:taskAffinity 
activity的亲属关系， 默认情况同一个应用程序下的activity有相同的关系 
android:theme 
activity的样式主题, 如果没有设置，则activity的主题样式从属于应用程序， 参见元素的theme属性 
android:windowSoftInputMode 
activity主窗口与软键盘的交互模式, 自从API level 3 被引入 
活动的主窗口如何与包含屏幕上的软键盘窗口交互。这个属性的设置将会影响两件事情: 
1>     软键盘的状态――是否它是隐藏或显示――当活动(Activity)成为用户关注的焦点。 
2>     活动的主窗口调整――是否减少活动主窗口大小以便腾出空间放软键盘或是否当活动窗口的部分被软键盘覆盖时它的内容的当前焦点是可见的。 
它的设置必须是下面列表中的一个值，或一个”state…”值加一个”adjust…”值的组合。在任一组设置多个值――多个”state…”values，例如＆mdash有未定义的结果。各个值之间用|分开。例如: <activity android:windowSoftInputMode="stateVisible|adjustResize" . . . > 
在这设置的值(除"stateUnspecified"和"adjustUnspecified"以外)将覆盖在主题中设置的值 
值 描述 
"stateUnspecified" 软键盘的状态(是否它是隐藏或可见)没有被指定。系统将选择一个合适的状态或依赖于主题的设置。这个是为了软件盘行为默认的设置。 

"stateUnchanged" 软键盘被保持无论它上次是什么状态，是否可见或隐藏，当主窗口出现在前面时。 
"stateHidden" 当用户选择该Activity时，软键盘被隐藏――也就是，当用户确定导航到该Activity时，而不是返回到它由于离开另一个Activity。 
"stateAlwaysHidden" 软键盘总是被隐藏的，当该Activity主窗口获取焦点时。 
"stateVisible" 软键盘是可见的，当那个是正常合适的时(当用户导航到Activity主窗口时)。 
"stateAlwaysVisible" 当用户选择这个Activity时，软键盘是可见的――也就是，也就是，当用户确定导航到该Activity时，而不是返回到它由于离开另一个Activity。 

"adjustUnspecified" 它不被指定是否该Activity主窗口调整大小以便留出软键盘的空间，或是否窗口上的内容得到屏幕上当前的焦点是可见的。系统将自动选择这些模式中一种主要依赖于是否窗口的内容有任何布局视图能够滚动他们的内容。如果有这样的一个视图，这个窗口将调整大小，这样的假设可以使滚动窗口的内容在一个较小的区域中可见的。这个是主窗口默认的行为设置。 

"adjustResize" 该Activity主窗口总是被调整屏幕的大小以便留出软键盘的空间。 

"adjustPan" 该Activity主窗口并不调整屏幕的大小以便留出软键盘的空间。相反，当前窗口的内容将自动移动以便当前焦点从不被键盘覆盖和用户能总是看到输入内容的部分。这个通常是不期望比调整大小，因为用户可能关闭软键盘以便获得与被覆盖内容的交互操作。 


----------------------------------------------------------------------------------------------------------------------------------------------------------------
Android EditText 属性汇总 
android:layout_gravity="center_vertical" 
设置控件显示的位置：默认top，这里居中显示，还有bottom 
android:hint="请输入数字！" 
设置显示在空间上的提示信息 
android:numeric="integer" 
设置只能输入整数，如果是小数则是：decimal 
android:singleLine="true" 
设置单行输入，一旦设置为true，则文字不会自动换行。 
android:password="true" 
设置只能输入密码 
android:textColor = "#ff8c00" 
字体颜色 
android:textStyle="bold" 
字体，bold, italic, bolditalic 
android:textSize="20dip" 
大小 
android:capitalize = "characters" 
以大写字母写 
android:textAlign="center" 
EditText没有这个属性，但TextView有 
android:textColorHighlight="#cccccc" 
被选中文字的底色，默认为蓝色 
android:textColorHint="#ffff00" 
设置提示信息文字的颜色，默认为灰色 
android:textScaleX="1.5" 
控制字与字之间的间距 
android:typeface="monospace" 
字型，normal, sans, serif, monospace 
android:background="@null" 
空间背景，这里没有，指透明 
android:layout_weight="1" 
权重，控制控件之间的地位,在控制控件显示的大小时蛮有用的。 
android:textAppearance="?android:attr/textAppearanceLargeInverse" 
文字外观，这里引用的是系统自带的一个外观，？表示系统是否有这种外观，否则使用默认的外观。不知道这样理解对不对？ 

通过EditText的layout xml文件中的相关属性来实现: 
  1. 密码框属性 android:password="true"  这条可以让EditText显示的内容自动为星号，输入时内容会在1秒内变成*字样。 
  2. 纯数字 android:numeric="true" 这条可以让输入法自动变为数字输入键盘，同时仅允许0-9的数字输入 
  3. 仅允许 android:capitalize="cwj1987" 这样仅允许接受输入cwj1987，一般用于密码验证 
  下面是一些扩展的风格属性 
  android:editable="false" 设置EditText不可编辑 
  android:singleLine="true" 强制输入的内容在单行 
  android:ellipsize="end" 自动隐藏尾部溢出数据，一般用于文字内容过长一行无法全部显示时 